package frame;

import controller.ControllerAnggota;
import data.DataAnggota;
import data.DataPembayaran;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aodi
 */
public class PendaftaranAnggota extends javax.swing.JFrame {

    private final ControllerAnggota controllerAnggota = new ControllerAnggota();
    private DefaultTableModel tableModel;

    String nama,
            jenis_kelamin,
            email,
            noHP,
            paket,
            coach,
            statusPembayaran,
            statusKeanggotaan,
            tanggalPembayaran,
            tenggatPembayaran;

    /**
     * Creates new form PendaftaranAnggota
     */
    public PendaftaranAnggota() {
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        initComponents();

        tableModel = new DefaultTableModel();
        tableModel.addColumn("ID_Anggota");
        tableModel.addColumn("Nama");
        tableModel.addColumn("Jenis Kelamin");
        tableModel.addColumn("Email");
        tableModel.addColumn("No HP");
        tableModel.addColumn("Paket Langganan");
        tableModel.addColumn("Coach");
        tableModel.addColumn("Status Pembayaran");
        tableModel.addColumn("Status Keanggotaan");
        tableModel.addColumn("Tanggal Pembayaran");
        tableModel.addColumn("Tenggat Pembayaran ");

        tabelAnggota.setModel(tableModel);

        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opsiJenisKelamin = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fieldNama = new javax.swing.JTextField();
        fieldNoHP = new javax.swing.JTextField();
        fieldEmail = new javax.swing.JTextField();
        comboboxPaket = new javax.swing.JComboBox<>();
        comboboxCoach = new javax.swing.JComboBox<>();
        opsiLakiLaki = new javax.swing.JRadioButton();
        opsiPerempuan = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelAnggota = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        inputButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaStatusPembayaran = new javax.swing.JTextArea();
        refreshButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        inputPencarian = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FitSport");
        setName(""); // NOI18N
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pintu Menuju Kebugaran, Daftar Sekarang dan Mulailah Petualangan Transformasi Tubuhmu");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("FitSport");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel9)
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Nama");

        jLabel4.setText("Email");

        jLabel6.setText("No HP");

        jLabel7.setText("Paket");

        jLabel8.setText("Coach");

        jLabel5.setText("Jenis Kelamin");

        comboboxPaket.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Silver", "Gold", "Platinum" }));

        comboboxCoach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alex Johnson", "Jessica Martinez", "Brian Wilson", "Emily Turner", "David Miller", "Tanpa Coach" }));

        opsiJenisKelamin.add(opsiLakiLaki);
        opsiLakiLaki.setText("Laki - Laki");

        opsiJenisKelamin.add(opsiPerempuan);
        opsiPerempuan.setText("Perempuan");

        tabelAnggota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelAnggota);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FitSport");

        inputButton.setText("Input");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Status Pembayaran");

        areaStatusPembayaran.setColumns(20);
        areaStatusPembayaran.setRows(5);
        jScrollPane3.setViewportView(areaStatusPembayaran);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Cari");

        inputPencarian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputPencarianKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(opsiLakiLaki)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opsiPerempuan))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refreshButton))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(editButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(inputButton))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel6)
                                                .addComponent(fieldNoHP, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel5))
                                            .addGap(30, 30, 30)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel7)
                                                        .addComponent(comboboxPaket, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel8)
                                                        .addComponent(comboboxCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGap(30, 30, 30)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(0, 0, Short.MAX_VALUE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldNoHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboboxPaket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboboxCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opsiLakiLaki)
                    .addComponent(opsiPerempuan))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(refreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputButton)
                    .addComponent(deleteButton)
                    .addComponent(editButton))
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionPerformed
        // TODO add your handling code here:
        nama = fieldNama.getText();
        email = fieldEmail.getText();
        noHP = fieldNoHP.getText();
        paket = comboboxPaket.getItemAt(comboboxPaket.getSelectedIndex());
        coach = comboboxCoach.getItemAt(comboboxCoach.getSelectedIndex());
        statusPembayaran = areaStatusPembayaran.getText();

        // Validasi Nama
        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi Jenis Kelamin
        if (opsiLakiLaki.isSelected()) {
            jenis_kelamin = opsiLakiLaki.getText();
        } else if (opsiPerempuan.isSelected()) {
            jenis_kelamin = opsiPerempuan.getText();
        } else {
            JOptionPane.showMessageDialog(null, "Jenis kelamin tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi Email
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Email tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi Nomor HP
        if (noHP.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nomor HP tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi Paket
        if (paket.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih paket terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi Coach
        if (coach.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih coach terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Hentikan proses jika validasi gagal
        }

        // Validasi Status Pembayaran
        if (statusPembayaran.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Status pembayaran tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi apakah statusPembayaran hanya boleh "Belum Bayar" atau "Sudah Bayar"
        if (!"Belum Bayar".equalsIgnoreCase(statusPembayaran) && !"Sudah Bayar".equalsIgnoreCase(statusPembayaran)) {
            JOptionPane.showMessageDialog(this, "Status pembayaran hanya boleh 'Belum Bayar' atau 'Sudah Bayar'", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validasi Status Keanggotaan
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggalSekarang = sdf.format(new Date());
        int dataHari = 30;

        DataPembayaran dataPembayaran = new DataPembayaran(statusPembayaran, null, tanggalSekarang, null);

        menentukanStatusKeanggotaan(dataPembayaran, dataHari);

        statusPembayaran = dataPembayaran.getStatusPembayaran();
        statusKeanggotaan = dataPembayaran.getStatusKeanggotaan();
        tanggalPembayaran = dataPembayaran.getTanggalPembayaran();
        tenggatPembayaran = dataPembayaran.getTenggatPembayaran();

        int konfirmasi = JOptionPane.showConfirmDialog(
                null,
                "Apakah data sudah lengkap?",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION
        );

        switch (konfirmasi) {
            case JOptionPane.YES_OPTION -> {
                controllerAnggota.createData(nama, jenis_kelamin, email, noHP, paket, coach, statusPembayaran, statusKeanggotaan, tanggalPembayaran, tenggatPembayaran);
                refreshTable();
            }
            case JOptionPane.NO_OPTION ->
                JOptionPane.showMessageDialog(null, "Mohon isi data hingga lengkap!", "Peringatan", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_inputButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelAnggota.getSelectedRow();
        int idColumnIndex = 0;
        int idAnggota = (int) tabelAnggota.getValueAt(selectedRow, idColumnIndex);

        int konfirmasi = JOptionPane.showConfirmDialog(
                null,
                "Ingin hapus data ini?",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION
        );

        switch (konfirmasi) {
            case JOptionPane.YES_OPTION:
                if (selectedRow != -1) {
                    controllerAnggota.deleteDataByID(idAnggota);
                    refreshTable();
                    break;
                }
            case JOptionPane.NO_OPTION:
                JOptionPane.showMessageDialog(null, "Hapus data dibatalkan!", "Peringatan", JOptionPane.CANCEL_OPTION);
                break;
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelAnggota.getSelectedRow();

        if (selectedRow != -1) {
            int idColumnIndex = 0;
            int idAnggota = (int) tabelAnggota.getValueAt(selectedRow, idColumnIndex);

            EditAnggota editFrame = new EditAnggota(idAnggota);
            editFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Pilih baris terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_editButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void inputPencarianKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPencarianKeyReleased
        // TODO add your handling code here:
        tableModel = new DefaultTableModel();
        tableModel.setRowCount(0);

        tableModel.addColumn("ID_Anggota");
        tableModel.addColumn("Nama");
        tableModel.addColumn("Jenis Kelamin");
        tableModel.addColumn("Email");
        tableModel.addColumn("No HP");
        tableModel.addColumn("Paket Langganan");
        tableModel.addColumn("Coach");
        tableModel.addColumn("Status Pembayaran");
        tableModel.addColumn("Status Keanggotaan");
        tableModel.addColumn("Tanggal Pembayaran");
        tableModel.addColumn("Tenggat Pembayaran ");

        String pencarian = inputPencarian.getText();

        if (!pencarian.isEmpty()) {
            List<DataAnggota> listFilteredAnggota = controllerAnggota.getDataByName(pencarian);

            for (DataAnggota dataAnggota : listFilteredAnggota) {
                Object[] data = {
                    dataAnggota.getId(),
                    dataAnggota.getNama(),
                    dataAnggota.getJenisKelamin(),
                    dataAnggota.getEmail(),
                    dataAnggota.getNoHP(),
                    dataAnggota.getPaketLangganan(),
                    dataAnggota.getCoach(),
                    dataAnggota.getStatusPembayaran(),
                    dataAnggota.getStatusKeanggotaan(),
                    dataAnggota.getTanggalPembayaran(),
                    dataAnggota.getTenggatPembayaran()
                };

                tableModel.addRow(data);
            }
        } else {
            refreshTable();
        }

        tabelAnggota.setModel(tableModel);
    }//GEN-LAST:event_inputPencarianKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PendaftaranAnggota.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PendaftaranAnggota().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaStatusPembayaran;
    private javax.swing.JComboBox<String> comboboxCoach;
    private javax.swing.JComboBox<String> comboboxPaket;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldNama;
    private javax.swing.JTextField fieldNoHP;
    private javax.swing.JButton inputButton;
    private javax.swing.JTextField inputPencarian;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.ButtonGroup opsiJenisKelamin;
    private javax.swing.JRadioButton opsiLakiLaki;
    private javax.swing.JRadioButton opsiPerempuan;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable tabelAnggota;
    // End of variables declaration//GEN-END:variables

    public final void refreshTable() {
        tableModel.setRowCount(0);

        List<DataAnggota> listAnggota = controllerAnggota.getAllData();

        for (DataAnggota dataAnggota : listAnggota) {
            Object[] data = {
                dataAnggota.getId(),
                dataAnggota.getNama(),
                dataAnggota.getJenisKelamin(),
                dataAnggota.getEmail(),
                dataAnggota.getNoHP(),
                dataAnggota.getPaketLangganan(),
                dataAnggota.getCoach(),
                dataAnggota.getStatusPembayaran(),
                dataAnggota.getStatusKeanggotaan(),
                dataAnggota.getTanggalPembayaran(),
                dataAnggota.getTenggatPembayaran()
            };

            tableModel.addRow(data);
        }

        tabelAnggota.setModel(tableModel);
    }

    // Logika untuk menentukan status keanggotaan berdasarkan status pembayaran
    public void menentukanStatusKeanggotaan(DataPembayaran dataPembayaran, int dataHari) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

        // Jika status pembayaran belum bayar
        if ("Sudah Bayar".equalsIgnoreCase(dataPembayaran.getStatusPembayaran())) {

            Calendar expirationDateCalendar = Calendar.getInstance();

            expirationDateCalendar.add(Calendar.DAY_OF_MONTH, dataHari);

            Date expirationDate = expirationDateCalendar.getTime();

            dataPembayaran.setStatusKeanggotaan("Aktif");
            dataPembayaran.setTanggalPembayaran(sdf.format(new Date()));
            dataPembayaran.setTenggatPembayaran(sdf.format(expirationDate));

        }

        // Jika status pembayaran sudah bayar
        if ("Belum Bayar".equalsIgnoreCase(dataPembayaran.getStatusPembayaran())) {

            Calendar expirationDateCalendar = Calendar.getInstance();

            expirationDateCalendar.add(Calendar.DAY_OF_MONTH, dataHari);

            Date expirationDate = expirationDateCalendar.getTime();

            dataPembayaran.setStatusKeanggotaan("Tidak Aktif");
            dataPembayaran.setTanggalPembayaran("-");
            dataPembayaran.setTenggatPembayaran(sdf.format(expirationDate));

        }
    }

}
